services:
  mariadb:
    image: mariadb:10.4
    container_name: mariadb
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - /mnt/drive1/mysql:/var/lib/mysql
    env_file:
      - ./env_files/mariadb.env

  nextcloud:
    image: nextcloud:30.0.8
    container_name: nextcloud
    restart: always
    # runs on port 80
    links:
      - mariadb
    volumes:
      - ./nextcloud:/var/www/html
      - /mnt/drive1/nc_data:/nc_data
    env_file:
      - ./env_files/nextcloud.env
    environment:
      - NEXTCLOUD_DATA_DIR=/nc_data
      - MYSQL_HOST=mariadb
      - REDIS_HOST=redis
      - PHP_MEMORY_LIMIT=1024M
      - PHP_UPLOAD_LIMIT=1024M
    depends_on:
      - mariadb
      - redis

  cron-nc:
    image: nextcloud:30.0.8
    container_name: cron-nc
    restart: unless-stopped
    volumes:
      - ./nextcloud:/var/www/html
      - /mnt/drive1/nc_data:/nc_data
    entrypoint: /cron.sh
    depends_on:
      - mariadb
      - redis
      - nextcloud

  redis:
    image: redis:alpine
    container_name: redis
    restart: always

  caddy:
    image: ghcr.io/caddybuilds/caddy-cloudflare:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
    env_file:
      - ./env_files/global.env
    links:
      - nextcloud
      - grafana

  ddclient:
    image: lscr.io/linuxserver/ddclient:latest
    container_name: ddclient
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
    env_file:
      - ./env_files/global.env
    volumes:
      - ./ddclient/config:/config

  iobroker:
    image: buanet/iobroker:latest-v7
    container_name: iobroker
    hostname: iobroker
    restart: always
    ports:
      - 8081:8081
      - 502:502
      - 1883:1883
      - 1882:1882
    volumes:
      - ./iobroker:/opt/iobroker

  influxdb:
    image: influxdb:2
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    volumes:
      - /mnt/drive1/influxdb:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    env_file:
      - ./env_files/influxdb.env
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG=tino
      - DOCKER_INFLUXDB_INIT_BUCKET=smarthome

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana/var:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_LOG_LEVEL=warn
    links:
      - influxdb
    depends_on:
      - influxdb
